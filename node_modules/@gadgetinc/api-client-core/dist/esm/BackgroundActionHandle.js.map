{"version":3,"file":"BackgroundActionHandle.js","sourceRoot":"","sources":["../../src/BackgroundActionHandle.ts"],"names":[],"mappings":"AAIA,yEAAyE;AACzE,MAAM,OAAO,sBAAsB;IACjC,YAAqB,UAA4B,EAAW,EAAU,EAAW,OAA+C;QAApH;;;;mBAAS,UAAU;WAAkB;QAAE;;;;mBAAS,EAAE;WAAQ;QAAE;;;;mBAAS,OAAO;WAAwC;IAAG,CAAC;IAEpI,yEAAyE;IACzE,KAAK,CAAC,MAAM,CAAgD,OAAiB;QAC3E,kBAAkB;IACpB,CAAC;CACF","sourcesContent":["import type { GadgetConnection } from \"./GadgetConnection.js\";\nimport type { AnyActionFunction } from \"./GadgetFunctions.js\";\nimport type { ActionFunctionOptions, EnqueueBackgroundActionOptions } from \"./types.js\";\n\n/** Represents a handle to a background action which has been enqueued */\nexport class BackgroundActionHandle<Action extends AnyActionFunction> {\n  constructor(readonly connection: GadgetConnection, readonly id: string, readonly options: EnqueueBackgroundActionOptions<Action>) {}\n\n  /** Wait for this background action to complete and return the result. */\n  async result<Options extends ActionFunctionOptions<Action>>(options?: Options) {\n    // TODO: implement\n  }\n}\n"]}