/// <reference types="react" />
type TableType = 'index-table' | 'resource-list';
export interface UseIsSelectAllActionsStickyProps {
    selectMode: boolean;
    hasPagination?: boolean;
    tableType: TableType;
}
export interface SelectAllActionsStickyCalculations {
    selectAllActionsIntersectionRef: React.RefObject<HTMLDivElement>;
    tableMeasurerRef: React.RefObject<HTMLDivElement>;
    isSelectAllActionsSticky: boolean;
    selectAllActionsAbsoluteOffset: number;
    selectAllActionsMaxWidth: number;
    selectAllActionsOffsetLeft: number;
    selectAllActionsOffsetBottom: number;
    computeTableDimensions(): {
        maxWidth: number;
        offsetHeight: number;
        offsetLeft: number;
        offsetBottom: number;
    } | undefined;
    isScrolledPastTop: boolean;
    selectAllActionsPastTopOffset: number;
    scrollbarPastTopOffset: number;
}
export declare function useIsSelectAllActionsSticky({ selectMode, hasPagination, tableType, }: UseIsSelectAllActionsStickyProps): SelectAllActionsStickyCalculations;
export {};
//# sourceMappingURL=use-is-select-all-actions-sticky.d.ts.map